!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
DEF_SKIN	ui.h	71;"	d
INFO_NA	ui_player_info.c	17;"	d	file:
LAB_FORMAT	ui_player_info.c	16;"	d	file:
TRAY_ICON	ui.h	72;"	d
TRAY_SIZE	ui.h	73;"	d
UI_H	ui.h	11;"	d
album	ui.h	/^	struct ui_skin_label *album;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_label	access:public
albumcover	ui.h	/^	struct ui_skin_albumcover *albumcover;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_albumcover	access:public
align	ui.h	/^	float align;$/;"	m	struct:ui_skin_label	access:public
artist	ui.h	/^	struct ui_skin_label *artist;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_label	access:public
color	ui.h	/^	char *color;$/;"	m	struct:ui_skin_label	access:public
container	ui_cover.c	/^static GtkWidget *container;$/;"	v	file:
container	ui_player_control.c	/^static GtkWidget *container;$/;"	v	file:
current_skin	ui_skin.c	/^static struct ui_skin *current_skin;$/;"	v	typeref:struct:ui_skin	file:
e_img_btn_handle	ui_player_control.c	/^static int e_img_btn_handle(GtkWidget *widget, GdkEventButton *event, void *data)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_img_btn_handle	ui_player_control.c	/^static int e_img_btn_handle(GtkWidget *widget, GdkEventButton *event, void *data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_menu_popup	ui_menu.c	/^static int e_menu_popup(GtkWidget *widget, GdkEventButton *event, void *data)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_menu_popup	ui_menu.c	/^static int e_menu_popup(GtkWidget *widget, GdkEventButton *event, void *data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_player_next	ui_player_control.c	/^static int e_player_next(GtkWidget *widget, GdkEventButton *event, void *data)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_player_next	ui_player_control.c	/^static int e_player_next(GtkWidget *widget, GdkEventButton *event, void *data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_player_prev	ui_player_control.c	/^static int e_player_prev(GtkWidget *widget, GdkEventButton *event, void *data)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_player_prev	ui_player_control.c	/^static int e_player_prev(GtkWidget *widget, GdkEventButton *event, void *data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_player_status	ui_player_control.c	/^static int e_player_status(GtkWidget *widget, GdkEventButton *event, void *data)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_player_status	ui_player_control.c	/^static int e_player_status(GtkWidget *widget, GdkEventButton *event, void *data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_window_drag	ui_menu.c	/^static int e_window_drag(GtkWidget *widget, GdkEventButton *event, void *data)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
e_window_drag	ui_menu.c	/^static int e_window_drag(GtkWidget *widget, GdkEventButton *event, void *data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event, void *data)
enable	ui.h	/^	int enable;$/;"	m	struct:ui_skin_label	access:public
font	ui.h	/^	char *font;$/;"	m	struct:ui_skin_label	access:public
height	ui.h	/^	int height;$/;"	m	struct:ui_skin	access:public
height	ui.h	/^	int height;$/;"	m	struct:ui_skin_albumcover	access:public
img_case	ui.h	/^	struct ui_skin_image *img_case;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
img_next	ui.h	/^	struct ui_skin_image *img_next;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
img_pause	ui.h	/^	struct ui_skin_image *img_pause;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
img_play	ui.h	/^	struct ui_skin_image *img_play;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
img_prev	ui.h	/^	struct ui_skin_image *img_prev;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
lab_album	ui_player_info.c	/^static GtkWidget *lab_album;$/;"	v	file:
lab_artist	ui_player_info.c	/^static GtkWidget *lab_artist;$/;"	v	file:
lab_title	ui_player_info.c	/^static GtkWidget *lab_title;$/;"	v	file:
max_char	ui.h	/^	int max_char;$/;"	m	struct:ui_skin_label	access:public
name	ui.h	/^	char *name;$/;"	m	struct:ui_skin	access:public
nocover	ui.h	/^	char *nocover;$/;"	m	struct:ui_skin_albumcover	access:public
old_info	ui_main.c	/^static struct player_music_info *old_info;$/;"	v	typeref:struct:player_music_info	file:
poll_mutex	ui_main.c	/^static pthread_mutex_t poll_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
s_menu_lock	ui_menu.c	/^static void s_menu_lock(GtkWidget *widget, GdkEventButton *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event)
s_menu_lock	ui_menu.c	/^static void s_menu_lock(GtkWidget *widget, GdkEventButton *event);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event)
s_menu_next	ui_menu.c	/^static void s_menu_next(GtkWidget *widget, GdkEventButton *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event)
s_menu_next	ui_menu.c	/^static void s_menu_next(GtkWidget *widget, GdkEventButton *event);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event)
s_menu_prev	ui_menu.c	/^static void s_menu_prev(GtkWidget *widget, GdkEventButton *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event)
s_menu_prev	ui_menu.c	/^static void s_menu_prev(GtkWidget *widget, GdkEventButton *event);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event)
s_menu_quit	ui_menu.c	/^static void s_menu_quit(GtkWidget *widget, GdkEventButton *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event)
s_menu_quit	ui_menu.c	/^static void s_menu_quit(GtkWidget *widget, GdkEventButton *event);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event)
s_menu_skin	ui_menu.c	/^static void s_menu_skin(GtkWidget *widget, GdkEventButton *event)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventButton *event)
s_menu_skin	ui_menu.c	/^static void s_menu_skin(GtkWidget *widget, GdkEventButton *event);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventButton *event)
skin_conf	ui.h	/^	char *skin_conf;$/;"	m	struct:ui_skin_entity	access:public
skin_menu_items	ui_menu.c	/^static GtkWidget **skin_menu_items;$/;"	v	file:
skin_name	ui.h	/^	char *skin_name;$/;"	m	struct:ui_skin_entity	access:public
src	ui.h	/^	char *src;$/;"	m	struct:ui_skin_image	access:public
title	ui.h	/^	struct ui_skin_label *title;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_label	access:public
ui_cover_init	ui.h	/^void ui_cover_init(GtkWidget *fixed, GtkWidget *cover_container);$/;"	p	signature:(GtkWidget *fixed, GtkWidget *cover_container)
ui_cover_init	ui_cover.c	/^void ui_cover_init(GtkWidget *fixed, GtkWidget *cover_container)$/;"	f	signature:(GtkWidget *fixed, GtkWidget *cover_container)
ui_cover_update	ui.h	/^void ui_cover_update(struct player_music_info *info);$/;"	p	signature:(struct player_music_info *info)
ui_cover_update	ui_cover.c	/^void ui_cover_update(struct player_music_info *info)$/;"	f	signature:(struct player_music_info *info)
ui_do_transparent	ui_misc.c	/^static int ui_do_transparent(GtkWidget *widget, GdkEventExpose *event, void *data)$/;"	f	file:	signature:(GtkWidget *widget, GdkEventExpose *event, void *data)
ui_do_transparent	ui_misc.c	/^static int ui_do_transparent(GtkWidget *widget, GdkEventExpose *event, void *data);$/;"	p	file:	signature:(GtkWidget *widget, GdkEventExpose *event, void *data)
ui_get_current_skin	ui.h	/^struct ui_skin *ui_get_current_skin();$/;"	p	signature:()
ui_get_current_skin	ui_skin.c	/^struct ui_skin *ui_get_current_skin()$/;"	f
ui_load	ui.h	/^void ui_load();$/;"	p	signature:()
ui_load	ui_main.c	/^void ui_load()$/;"	f
ui_make_img_btn	ui_player_control.c	/^static GtkWidget *ui_make_img_btn(char *img_btn)$/;"	f	file:	signature:(char *img_btn)
ui_make_img_btn	ui_player_control.c	/^static GtkWidget *ui_make_img_btn(char *img_btn);$/;"	p	file:	signature:(char *img_btn)
ui_make_label	ui_player_info.c	/^static GtkWidget *ui_make_label(struct ui_skin_label *label, char *str)$/;"	f	file:	signature:(struct ui_skin_label *label, char *str)
ui_make_label	ui_player_info.c	/^static GtkWidget *ui_make_label(struct ui_skin_label *label, char *str);$/;"	p	file:	signature:(struct ui_skin_label *label, char *str)
ui_menu_init	ui.h	/^void ui_menu_init(GtkWidget *menu_container);$/;"	p	signature:(GtkWidget *menu_container)
ui_menu_init	ui_menu.c	/^void ui_menu_init(GtkWidget *container)$/;"	f	signature:(GtkWidget *container)
ui_player_control_init	ui.h	/^void ui_player_control_init(GtkWidget *fixed);$/;"	p	signature:(GtkWidget *fixed)
ui_player_control_init	ui_player_control.c	/^void ui_player_control_init(GtkWidget *fixed)$/;"	f	signature:(GtkWidget *fixed)
ui_player_control_update	ui.h	/^void ui_player_control_update();$/;"	p	signature:()
ui_player_control_update	ui_player_control.c	/^void ui_player_control_update()$/;"	f
ui_player_info_init	ui.h	/^void ui_player_info_init(GtkWidget *fixed);$/;"	p	signature:(GtkWidget *fixed)
ui_player_info_init	ui_player_info.c	/^void ui_player_info_init(GtkWidget *fixed)$/;"	f	signature:(GtkWidget *fixed)
ui_player_info_update	ui.h	/^void ui_player_info_update(struct player_music_info *info);$/;"	p	signature:(struct player_music_info *info)
ui_player_info_update	ui_player_info.c	/^void ui_player_info_update(struct player_music_info *info)$/;"	f	signature:(struct player_music_info *info)
ui_poll	ui_main.c	/^static int ui_poll(GtkWidget *widget)$/;"	f	file:	signature:(GtkWidget *widget)
ui_poll	ui_main.c	/^static int ui_poll(GtkWidget *widget);$/;"	p	file:	signature:(GtkWidget *widget)
ui_set_transparent	ui.h	/^int ui_set_transparent(GtkWidget *widget, GdkScreen *old_screen, void *data);$/;"	p	signature:(GtkWidget *widget, GdkScreen *old_screen, void *data)
ui_set_transparent	ui_misc.c	/^int ui_set_transparent(GtkWidget *widget, GdkScreen *old_screen, void *data)$/;"	f	signature:(GtkWidget *widget, GdkScreen *old_screen, void *data)
ui_skin	ui.h	/^struct ui_skin$/;"	s
ui_skin::album	ui.h	/^	struct ui_skin_label *album;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_label	access:public
ui_skin::albumcover	ui.h	/^	struct ui_skin_albumcover *albumcover;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_albumcover	access:public
ui_skin::artist	ui.h	/^	struct ui_skin_label *artist;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_label	access:public
ui_skin::height	ui.h	/^	int height;$/;"	m	struct:ui_skin	access:public
ui_skin::img_case	ui.h	/^	struct ui_skin_image *img_case;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
ui_skin::img_next	ui.h	/^	struct ui_skin_image *img_next;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
ui_skin::img_pause	ui.h	/^	struct ui_skin_image *img_pause;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
ui_skin::img_play	ui.h	/^	struct ui_skin_image *img_play;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
ui_skin::img_prev	ui.h	/^	struct ui_skin_image *img_prev;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_image	access:public
ui_skin::name	ui.h	/^	char *name;$/;"	m	struct:ui_skin	access:public
ui_skin::title	ui.h	/^	struct ui_skin_label *title;$/;"	m	struct:ui_skin	typeref:struct:ui_skin::ui_skin_label	access:public
ui_skin::width	ui.h	/^	int width;$/;"	m	struct:ui_skin	access:public
ui_skin_albumcover	ui.h	/^struct ui_skin_albumcover$/;"	s
ui_skin_albumcover::height	ui.h	/^	int height;$/;"	m	struct:ui_skin_albumcover	access:public
ui_skin_albumcover::nocover	ui.h	/^	char *nocover;$/;"	m	struct:ui_skin_albumcover	access:public
ui_skin_albumcover::width	ui.h	/^	int width;$/;"	m	struct:ui_skin_albumcover	access:public
ui_skin_albumcover::x	ui.h	/^	int x;$/;"	m	struct:ui_skin_albumcover	access:public
ui_skin_albumcover::y	ui.h	/^	int y;$/;"	m	struct:ui_skin_albumcover	access:public
ui_skin_entity	ui.h	/^struct ui_skin_entity$/;"	s
ui_skin_entity::skin_conf	ui.h	/^	char *skin_conf;$/;"	m	struct:ui_skin_entity	access:public
ui_skin_entity::skin_name	ui.h	/^	char *skin_name;$/;"	m	struct:ui_skin_entity	access:public
ui_skin_entity_free	ui.h	/^void ui_skin_entity_free(struct ui_skin_entity *ptr);$/;"	p	signature:(struct ui_skin_entity *ptr)
ui_skin_entity_free	ui_skin.c	/^void ui_skin_entity_free(struct ui_skin_entity *ptr)$/;"	f	signature:(struct ui_skin_entity *ptr)
ui_skin_free	ui.h	/^void ui_skin_free(struct ui_skin *ptr);$/;"	p	signature:(struct ui_skin *ptr)
ui_skin_free	ui_skin.c	/^void ui_skin_free(struct ui_skin *ptr)$/;"	f	signature:(struct ui_skin *ptr)
ui_skin_getattr	ui_skin.c	/^static char *ui_skin_getattr(xmlNode *root, char *node_name, char *attr_name)$/;"	f	file:	signature:(xmlNode *root, char *node_name, char *attr_name)
ui_skin_image	ui.h	/^struct ui_skin_image$/;"	s
ui_skin_image::src	ui.h	/^	char *src;$/;"	m	struct:ui_skin_image	access:public
ui_skin_image::x	ui.h	/^	int x;$/;"	m	struct:ui_skin_image	access:public
ui_skin_image::y	ui.h	/^	int y;$/;"	m	struct:ui_skin_image	access:public
ui_skin_image_free	ui_skin.c	/^static void ui_skin_image_free(struct ui_skin_image *ptr)$/;"	f	file:	signature:(struct ui_skin_image *ptr)
ui_skin_image_free	ui_skin.c	/^static void ui_skin_image_free(struct ui_skin_image *ptr);$/;"	p	file:	signature:(struct ui_skin_image *ptr)
ui_skin_image_read	ui_skin.c	/^static struct ui_skin_image *ui_skin_image_read(xmlNode *root, char *node_name)$/;"	f	file:	signature:(xmlNode *root, char *node_name)
ui_skin_image_read	ui_skin.c	/^static struct ui_skin_image *ui_skin_image_read(xmlNode *root, char *node_name);$/;"	p	file:	signature:(xmlNode *root, char *node_name)
ui_skin_label	ui.h	/^struct ui_skin_label$/;"	s
ui_skin_label::align	ui.h	/^	float align;$/;"	m	struct:ui_skin_label	access:public
ui_skin_label::color	ui.h	/^	char *color;$/;"	m	struct:ui_skin_label	access:public
ui_skin_label::enable	ui.h	/^	int enable;$/;"	m	struct:ui_skin_label	access:public
ui_skin_label::font	ui.h	/^	char *font;$/;"	m	struct:ui_skin_label	access:public
ui_skin_label::max_char	ui.h	/^	int max_char;$/;"	m	struct:ui_skin_label	access:public
ui_skin_label::x	ui.h	/^	int x;$/;"	m	struct:ui_skin_label	access:public
ui_skin_label::y	ui.h	/^	int y;$/;"	m	struct:ui_skin_label	access:public
ui_skin_label_free	ui_skin.c	/^static void ui_skin_label_free(struct ui_skin_label *ptr)$/;"	f	file:	signature:(struct ui_skin_label *ptr)
ui_skin_label_free	ui_skin.c	/^static void ui_skin_label_free(struct ui_skin_label *ptr);$/;"	p	file:	signature:(struct ui_skin_label *ptr)
ui_skin_label_read	ui_skin.c	/^static struct ui_skin_label *ui_skin_label_read(xmlNode *root, char *node_name)$/;"	f	file:	signature:(xmlNode *root, char *node_name)
ui_skin_label_read	ui_skin.c	/^static struct ui_skin_label *ui_skin_label_read(xmlNode *root, char *node_name);$/;"	p	file:	signature:(xmlNode *root, char *node_name)
ui_skin_load	ui.h	/^struct ui_skin *ui_skin_load();$/;"	p	signature:()
ui_skin_load	ui_skin.c	/^struct ui_skin *ui_skin_load(const char *skin_name)$/;"	f	signature:(const char *skin_name)
ui_skin_load_all	ui.h	/^struct ui_skin_entity **ui_skin_load_all();$/;"	p	signature:()
ui_skin_load_all	ui_skin.c	/^struct ui_skin_entity **ui_skin_load_all()$/;"	f
ui_skin_read_float	ui_skin.c	/^static float ui_skin_read_float(xmlNode *root, char *node_name, char *attr_name, float *d)$/;"	f	file:	signature:(xmlNode *root, char *node_name, char *attr_name, float *d)
ui_skin_read_float	ui_skin.c	/^static float ui_skin_read_float(xmlNode *root, char *node_name, char *attr_name, float *d);$/;"	p	file:	signature:(xmlNode *root, char *node_name, char *attr_name, float *d)
ui_skin_read_integer	ui_skin.c	/^static int ui_skin_read_integer(xmlNode *root, char *node_name, char *attr_name, int *i)$/;"	f	file:	signature:(xmlNode *root, char *node_name, char *attr_name, int *i)
ui_skin_read_integer	ui_skin.c	/^static int ui_skin_read_integer(xmlNode *root, char *node_name, char *attr_name, int *i);$/;"	p	file:	signature:(xmlNode *root, char *node_name, char *attr_name, int *i)
ui_skin_read_string	ui_skin.c	/^static char *ui_skin_read_string(xmlNode *root, char *node_name, char *attr_name, char **s)$/;"	f	file:	signature:(xmlNode *root, char *node_name, char *attr_name, char **s)
ui_skin_read_string	ui_skin.c	/^static char *ui_skin_read_string(xmlNode *root, char *node_name, char *attr_name, char **s);$/;"	p	file:	signature:(xmlNode *root, char *node_name, char *attr_name, char **s)
ui_tray_init	ui.h	/^void ui_tray_init();$/;"	p	signature:()
ui_tray_init	ui_menu.c	/^void ui_tray_init()$/;"	f
ui_update	ui.h	/^void ui_update(const char *skin_name);$/;"	p	signature:(const char *skin_name)
ui_update	ui_main.c	/^void ui_update(const char *skin_name)$/;"	f	signature:(const char *skin_name)
width	ui.h	/^	int width;$/;"	m	struct:ui_skin	access:public
width	ui.h	/^	int width;$/;"	m	struct:ui_skin_albumcover	access:public
window	ui_main.c	/^static GtkWidget *window;$/;"	v	file:
x	ui.h	/^	int x;$/;"	m	struct:ui_skin_albumcover	access:public
x	ui.h	/^	int x;$/;"	m	struct:ui_skin_image	access:public
x	ui.h	/^	int x;$/;"	m	struct:ui_skin_label	access:public
y	ui.h	/^	int y;$/;"	m	struct:ui_skin_albumcover	access:public
y	ui.h	/^	int y;$/;"	m	struct:ui_skin_image	access:public
y	ui.h	/^	int y;$/;"	m	struct:ui_skin_label	access:public
